-   name: Install Packages
    package:
        name:
        -   apt-transport-https
        -   ca-certificates
        -   curl

-   name: Check /etc/fatab
    shell: cat /etc/fstab | grep -q Ansible
    register: fstab_edited_by_ansible
    failed_when: fstab_edited_by_ansible.rc > 1

-   name: Find root device
    shell: findmnt --target / --output SOURCE | tail -n 1
    register: root_device
    when: fstab_edited_by_ansible.rc != 0

-   name: Label root devices
    shell: e2label {{ root_device.stdout }} root
    when: fstab_edited_by_ansible.rc != 0

-   name: Setting mount
    template: src=mount/fstab.j2 dest=/etc/fstab
    notify: reload mount
    when: fstab_edited_by_ansible.rc != 0

-   name: Disable swap
    shell: swapoff -a

-   name: Install Docker public signing key
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -

-   name: Add the Docker apt repository
    shell: add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

-   name: Install Google Cloud public signing key
    get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg
        mode: '0644'

-   name: Add the Kubernetes apt repository
    lineinfile:
        path: /etc/apt/sources.list.d/kubernetes.list
        line: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
        create: yes

-   name: Install containerd Kubernetes Packages
    apt:
        pkg:
        -   containerd.io
        -   kubelet
        -   kubeadm
        -   kubectl
        update_cache: yes

-   name: Hold Kubernetes Packages
    dpkg_selections:
        name: '{{item}}'
        selection: hold
    with_items:
    -   kubelet
    -   kubeadm
    -   kubectl

-   name: Setting kernel module
    lineinfile:
        path: /etc/modules-load.d/k8s.conf
        line: "{{item}}"
        create: yes
    with_items:
    -   overlay
    -   br_netfilter

-   name: Load kernel module
    modprobe:
        name: br_netfilter
        state: present

-   name: Setting Sysctl
    lineinfile:
        path: /etc/sysctl.conf
        regexp: '^{{item}}.*'
        line: '{{item}}=1'
    with_items:
    -   net.ipv4.ip_forward
    -   net.bridge.bridge-nf-call-ip6tables
    -   net.bridge.bridge-nf-call-iptables
    notify: reload sysctl

-   name: Create containerd config
    shell: containerd config default > /etc/containerd/config.toml

-   name: Setting crictl endpoint
    shell: crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock --set image-endpoint=unix:///run/containerd/containerd.sock

# NOTE: Ubuntu 22.04でkubeadmでKubernetesクラスターが動かない？
# https://tech.virtualtech.jp/entry/2022/06/08/115030
-   name: Disable cgroup v2 and use cgroup v1
    lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT'
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="systemd.unified_cgroup_hierarchy=false"'


-   name: Reflect kernel parameter
    shell: update-grub


-   name: Reboot
    reboot:
        reboot_timeout: 300

# Local Variables:
# mode: yaml
# tab-width: 4
# End:
